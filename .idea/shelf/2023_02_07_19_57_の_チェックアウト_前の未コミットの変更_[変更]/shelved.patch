Index: build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    id \"java\"\r\n    id \"edu.wpi.first.GradleRIO\" version \"2022.2.1\"\r\n}\r\n\r\nsourceCompatibility = JavaVersion.VERSION_11\r\ntargetCompatibility = JavaVersion.VERSION_11\r\n\r\ndef ROBOT_MAIN_CLASS = \"frc.robot.Main\"\r\n\r\n// Define my targets (RoboRIO) and artifacts (deployable files)\r\n// This is added by GradleRIO's backing project DeployUtils.\r\ndeploy {\r\n    targets {\r\n        roborio(getTargetTypeClass('RoboRIO')) {\r\n            // Team number is loaded either from the .wpilib/wpilib_preferences.json\r\n            // or from command line. If not found an exception will be thrown.\r\n            // You can use getTeamOrDefault(team) instead of getTeamNumber if you\r\n            // want to store a team number in this file.\r\n            team = project.frc.getTeamNumber()\r\n            debug = project.frc.getDebugOrDefault(false)\r\n\r\n            artifacts {\r\n                // First part is artifact name, 2nd is artifact type\r\n                // getTargetTypeClass is a shortcut to get the class type using a string\r\n\r\n                frcJava(getArtifactTypeClass('FRCJavaArtifact')) {\r\n                }\r\n\r\n                // Static files artifact\r\n                frcStaticFileDeploy(getArtifactTypeClass('FileTreeArtifact')) {\r\n                    files = project.fileTree('src/main/deploy')\r\n                    directory = '/home/lvuser/deploy'\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\ndef deployArtifact = deploy.targets.roborio.artifacts.frcJava\r\n\r\n// Set to true to use debug for JNI.\r\nwpi.java.debugJni = false\r\n\r\n// Set this to true to enable desktop support.\r\ndef includeDesktopSupport = false\r\n\r\n// Defining my dependencies. In this case, WPILib (+ friends), and vendor libraries.\r\n// Also defines JUnit 4.\r\ndependencies {\r\n    implementation wpi.java.deps.wpilib()\r\n    implementation wpi.java.vendor.java()\r\n\r\n    roborioDebug wpi.java.deps.wpilibJniDebug(wpi.platforms.roborio)\r\n    roborioDebug wpi.java.vendor.jniDebug(wpi.platforms.roborio)\r\n\r\n    roborioRelease wpi.java.deps.wpilibJniRelease(wpi.platforms.roborio)\r\n    roborioRelease wpi.java.vendor.jniRelease(wpi.platforms.roborio)\r\n\r\n    nativeDebug wpi.java.deps.wpilibJniDebug(wpi.platforms.desktop)\r\n    nativeDebug wpi.java.vendor.jniDebug(wpi.platforms.desktop)\r\n    simulationDebug wpi.sim.enableDebug()\r\n\r\n    nativeRelease wpi.java.deps.wpilibJniRelease(wpi.platforms.desktop)\r\n    nativeRelease wpi.java.vendor.jniRelease(wpi.platforms.desktop)\r\n    simulationRelease wpi.sim.enableRelease()\r\n\r\n    testImplementation 'junit:junit:4.12'\r\n}\r\n\r\n// Simulation configuration (e.g. environment variables).\r\nwpi.sim.addGui().defaultEnabled = true\r\nwpi.sim.addDriverstation()\r\n\r\n// Setting up my Jar File. In this case, adding all libraries into the main jar ('fat jar')\r\n// in order to make them all available at runtime. Also adding the manifest so WPILib\r\n// knows where to look for our Robot Class.\r\njar {\r\n    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }\r\n    manifest edu.wpi.first.gradlerio.GradleRIOPlugin.javaManifest(ROBOT_MAIN_CLASS)\r\n    duplicatesStrategy = DuplicatesStrategy.INCLUDE\r\n}\r\n\r\n// Configure jar and deploy tasks\r\ndeployArtifact.jarTask = jar\r\nwpi.java.configureExecutableTasks(jar)\r\nwpi.java.configureTestTasks(test)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build.gradle b/build.gradle
--- a/build.gradle	(revision 09dedc188afe8cd001dad449b1cb9f3f558363c4)
+++ b/build.gradle	(date 1675766714761)
@@ -1,10 +1,10 @@
 plugins {
     id "java"
-    id "edu.wpi.first.GradleRIO" version "2022.2.1"
+    id "edu.wpi.first.GradleRIO" version "2023.3.2"
 }
 
-sourceCompatibility = JavaVersion.VERSION_11
-targetCompatibility = JavaVersion.VERSION_11
+sourceCompatibility = JavaVersion.VERSION_17
+targetCompatibility = JavaVersion.VERSION_17
 
 def ROBOT_MAIN_CLASS = "frc.robot.Main"
 
